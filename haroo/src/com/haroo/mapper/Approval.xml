<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.haroo.mapper.ApprovalMapper">
	<cache />
	<resultMap type="ApprovalVO" id="ApprovalMap">
    <result property="apNo" column="ap_no"/>
    <result property="foNo" column="fo_no"/>
    <result property="emNo" column="em_no"/>
    <result property="apTitle" column="ap_title"/>
    <result property="apContent" column="ap_content"/>
    <result property="apDate" column="ap_date"/>
    <result property="apPublic" column="ap_public"/>
    <result property="apStatus" column="ap_status"/>
    <result property="foKind" column="fo_kind"/>
    <result property="emName" column="em_name"/>
    <result property="alStatus" column="al_status"/>
  </resultMap>
	<resultMap type="ApprovalLineVO" id="ApprovalLineMap">
    <result property="apNo" column="ap_no"/>
    <result property="alNo" column="al_no"/>
    <result property="alOrder" column="al_order"/>
    <result property="alStatus" column="al_status"/>
    <result property="alDate" column="al_date"/>
    <result property="alComment" column="al_comment"/>
    <result property="emName" column="em_name"/>
    <result property="poName" column="po_name"/>
    <result property="deName" column="de_name"/>
  </resultMap>
	<resultMap type="LeaveVO" id="LeaveMap">
    <result property="apNo" column="ap_no"/>
    <result property="foNo" column="fo_no"/>
    <result property="emNo" column="em_no"/>
    <result property="leTitle" column="le_title"/>
    <result property="leKind" column="le_kind"/>
    <result property="leStart" column="le_start"/>
    <result property="leEnd" column="le_end"/>
    <result property="leDate" column="le_date"/>
    <result property="leStatus" column="le_status"/>
    <result property="daNo" column="da_no"/>
    <result property="leDays" column="le_days"/>
  </resultMap>
	<resultMap type="ExpenseListVO" id="ExpenseListMap">
    <result property="elNo" column="el_no"/>
    <result property="apNo" column="ap_no"/>
    <result property="elItem" column="el_item"/>
    <result property="elQuantity" column="el_quantity"/>
    <result property="elPrice" column="el_price"/>
    <result property="elCost" column="el_cost"/>
    <result property="elTotal" column="el_total"/>
  </resultMap>
	<resultMap type="ApLineEmpVO" id="ApLineEmpMap">
    <result property="emNo" column="em_no"/>
    <result property="emName" column="em_name"/>
    <result property="poName" column="po_name"/>
    <result property="deName" column="de_name"/>
  </resultMap>
  
	
	
	<!-- 결재문서 상신(저장) -->
	<insert id="insertApproval" parameterType="ApprovalVO">
	  <selectKey keyProperty="apNo" resultType="int" order="BEFORE">
	    SELECT ap_seq.nextval FROM dual
	  </selectKey>
	  INSERT INTO approval 
	    VALUES(#{apNo}, #{foNo}, #{emNo}, #{apTitle}, #{apContent}, SYSDATE, #{apPublic}, 0)
	</insert>
	
	 <!-- 휴가신청서 저장 -->
  <insert id="insertLeave" parameterType="LeaveVO" >
    INSERT INTO leave
      VALUES(#{apNo}, #{foNo}, #{emNo}, #{leTitle}, #{leKind}, TO_DATE(#{leStart}, 'YYYY-MM-DD'), 
      TO_DATE(#{leEnd}, 'YYYY-MM-DD'), SYSDATE, 0, #{daNo})
  </insert>
  
  <!-- 품의목록 저장 -->
  <insert id="insertExpenseList" parameterType="ExpenseListVO">
    INSERT INTO expense_list
      VALUES(#{elNo}, #{apNo}, #{elItem}, #{elQuantity}, #{elPrice}, #{elCost}, #{elTotal})
  </insert>
	
	<!-- 결재선 저장 -->
	<insert id="insertApprovalLine" parameterType="ApprovalLineVO">
	  INSERT INTO approval_line
	    VALUES(#{apNo}, #{alNo}, #{alOrder}, 0, null, null)
	</insert>
	
	<!-- 상신 문서 리스트 불러오기  TO_CHAR(ap_date, 'YYYY/MM/DD') AS ap_date,-->
	<select id="listApproval" parameterType="int" resultType="ApprovalVO" resultMap="ApprovalMap">
	  SELECT ap_no, ap_title, ap_date, ap_public, ap_status, fo_kind, em_name
      FROM approval ap JOIN approval_form af
      ON ap.fo_no = af.fo_no
      JOIN employee e
      ON ap.em_no = e.em_no
      WHERE ap.em_no=#{emNo}
      <choose>
        <when test="apStatus == 0">
          AND ap_status = 0
        </when>
        <when test="apStatus == 1">
          AND ap_status = 1
        </when>
        <when test="apStatus == 2">
          AND ap_status = 2
        </when>
        <when test="apStatus == -1">
          AND ap_status <![CDATA[<]]> 0
        </when>
        <otherwise>
          AND ap_status <![CDATA[>]]> 0
        </otherwise>
      </choose>
      ORDER BY ap_date DESC
	</select>
	
	<!-- 1 문서 내용 불러오기 -->
	<select id="detailApproval" parameterType="int" resultType="ApprovalVO" resultMap="ApprovalMap">
	  SELECT ap_no, ap.fo_no, ap_title, ap_content, ap_date, ap_public, ap_status, fo_kind, em_name
      FROM approval ap JOIN approval_form af
      ON ap.fo_no = af.fo_no
      JOIN employee e
      ON ap.em_no = e.em_no
      WHERE ap_no = #{apNo}
	</select>
	
	<!-- 2 해당 문서 결재선 불러오기 -->
	<select id="detailApLine" parameterType="int" resultType="ApprovalLineVO" resultMap="ApprovalLineMap">
	  SELECT ap_no, em_no AS al_no, al_order, al_status, al_date, al_comment, em_name, po_name, de_name 
	    FROM approval_line al JOIN employee e
	      ON al.al_no = e.em_no
	      JOIN position p
        ON e.po_no = p.po_no JOIN department d 
        ON e.de_no = d.de_no
        WHERE ap_no = #{apNo}
        order by al_order
	</select>
	
	<!-- 3 해당 문서 휴가내역 불러오기 -->
	<select id="detailLeave" parameterType="int" resultType="LeaveVO" resultMap="LeaveMap">
	  SELECT ap_no, fo_no, em_no, le_title, le_kind, TO_CHAR(le_start, 'YYYY/MM/DD') AS le_start, 
	    TO_CHAR(le_end, 'YYYY/MM/DD') AS le_end, da_no, 
	    (TO_DATE(le_end,'YYYY-MM-DD') - TO_DATE(le_start,'YYYY-MM-DD')+1) AS le_days
	    FROM leave WHERE ap_no = #{apNo}
	</select>
	
	<!-- 4 해당 문서 품의목록 불러오기 -->
	<select id="detailExpenseList" parameterType="int" resultType="ExpenseListVO" resultMap="ExpenseListMap">
	  SELECT * FROM expense_list WHERE ap_no = #{apNp} ORDER BY el_no
	</select>
	
	<!-- 상신취소 -->
	<update id="takebackApproval" parameterType="int">
	  UPDATE approval SET ap_status = -1, ap_public = 1 WHERE ap_no = #{apNo}
	</update>
	
	<!-- 수신문서 불러오기 -->
	<select id="receiveApproval" parameterType="int" resultType="ApprovalVO" resultMap="ApprovalMap">
	  SELECT ap.ap_no, ap_title, ap_date, ap_public, ap_status, fo_kind, em_name, al_status
      FROM approval ap JOIN approval_form af
      ON ap.fo_no = af.fo_no
      JOIN employee e
      ON ap.em_no = e.em_no
      JOIN approval_line al
      ON ap.ap_no = al.ap_no 
      WHERE al_no=#{emNo} AND ap.ap_no != -1
      <choose>
        <when test="alStatus == 0">
          AND al_status = 0
          AND (1 = ALL(SELECT b.al_status
                    FROM (SELECT al_order, ap_no FROM approval_line WHERE al_no = ${emNo}) a 
                    JOIN approval_line b
                    ON a.ap_no = b.ap_no
                    WHERE b.al_order <![CDATA[<]]> a.al_order)
          OR al_order = 1)
        </when>
        <when test="alStatus gt 0">
          AND al_status <![CDATA[>]]> 0
        </when>
      </choose>
      ORDER BY ap_date DESC
	</select>
	
	<!-- 결재하기 -->
	<update id="approvalReport" parameterType="ApprovalLineVO">
	  UPDATE approval_line 
	    SET al_status = #{alStatus}, al_date = sysdate, al_comment = #{alComment}
	    WHERE ap_no = #{apNo} AND al_no = #{alNo}
	</update>
	
	 <!-- 결재 상태 변경 -->
  <update id="updateApprovalStatus" parameterType="ApprovalLineVO">
    UPDATE approval SET ap_status = ${alStatus}
    WHERE ap_no = #{apNo} 
    AND 0 <![CDATA[<]]> ALL(SELECT al_status FROM approval_line WHERE ap_no = #{apNo})
  </update>
	
	<!-- 결재선 사원 선택 리스트 불러오기 -->
	<select id="listLineEmployee" resultType="ApLineEmpVO" resultMap="ApLineEmpMap">
	  SELECT em_no, em_name, po_name, de_name, e.po_no FROM employee e JOIN position p
	  ON e.po_no = p.po_no JOIN department d 
	  ON e.de_no = d.de_no
	  order by de_name, po_no
	</select>
	

</mapper>
